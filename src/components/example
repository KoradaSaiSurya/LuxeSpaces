

/* Password Modal Styles */
// .password-modal {
//     display: flex;
//     position: fixed;
//     z-index: 10000;
//     left: 0;
//     top: 0;
//     width: 100%;
//     height: 100%;
//     background-color: rgba(0,0,0,0.5);
//     backdrop-filter: blur(5px);
// }

// .password-modal-content {
//     background-color: white;
//     margin: 15% auto;
//     padding: 2rem;
//     border-radius: 15px;
//     width: 90%;
//     max-width: 400px;
//     box-shadow: 0 20px 40px rgba(0,0,0,0.3);
//     text-align: center;
//     animation: modalSlideIn 0.3s ease;
// }

// @keyframes modalSlideIn {
//     from {
//         opacity: 0;
//         transform: translateY(-50px);
//     }
//     to {
//         opacity: 1;
//         transform: translateY(0);
//     }
// }

// .password-modal h3 {
//     color: #333;
//     margin-bottom: 1rem;
//     font-size: 1.5rem;
// }

// .password-modal p {
//     color: #666;
//     margin-bottom: 2rem;
// }

// .password-input {
//     width: 100%;
//     padding: 12px;
//     border: 2px solid #ddd;
//     border-radius: 8px;
//     font-size: 1rem;
//     margin-bottom: 1rem;
//     text-align: center;
//     transition: border-color 0.3s ease;
// }

// .password-input:focus {
//     outline: none;
//     border-color: #d4af37;
// }

// .password-buttons {
//     display: flex;
//     gap: 1rem;
//     justify-content: center;
// }

// .password-btn {
//     padding: 10px 20px;
//     border: none;
//     border-radius: 8px;
//     cursor: pointer;
//     font-weight: bold;
//     transition: all 0.3s ease;
// }

// .password-btn.confirm {
//     background: #d4af37;
//     color: white;
// }

// .password-btn.confirm:hover {
//     background: #b8941f;
// }

// .password-btn.cancel {
//     background: #f0f0f0;
//     color: #333;
// }

// .password-btn.cancel:hover {
//     background: #e0e0e0;
// }

// .password-error {
//     color: #e74c3c;
//     font-size: 0.9rem;
//     margin-top: 0.5rem;
//     display: none;
// }













// import express from "express";
// import mongoose from "mongoose";
// import cors from "cors";
// import path from "path";
// import { fileURLToPath } from "url";
// import dotenv from "dotenv";
// import projectRoutes from "./routes/projectRoutes.js";

// // ‚úÖ Load environment variables
// dotenv.config();

// const app = express();
// const PORT = process.env.PORT || 5000;

// // Fix dirname issue in ES Modules
// const __filename = fileURLToPath(import.meta.url);
// const __dirname = path.dirname(__filename);

// // Middleware
// app.use(cors());
// app.use(express.json());
// app.use("/uploads", express.static(path.join(__dirname, "uploads")));

// // Routes
// app.use("/api/projects", projectRoutes);

// // ‚úÖ Connect to MongoDB Atlas
// mongoose.connect(process.env.MONGO_URI, {
//   useNewUrlParser: true,
//   useUnifiedTopology: true,
// })
// .then(() => {
//   app.listen(PORT, () => console.log(`‚úÖ Server running on http://localhost:${PORT}`));
// })
// .catch((err) => console.error("‚ùå DB Connection Error:", err));







// import mongoose from "mongoose";

// const projectSchema = new mongoose.Schema({
//   title: { type: String, required: true },
//   imageUrl: { type: String, required: true },
//   price: { type: Number, required: true },
//   warranty: { type: String, required: true },
//   content: { type: String, required: true },
// });

// export default mongoose.model("Project", projectSchema);





// import express from "express";
// import multer from "multer";
// import Project from "../models/Project.js";
// import path from "path";

// const router = express.Router();

// // Multer storage setup
// const storage = multer.diskStorage({
//   destination: (req, file, cb) => cb(null, "uploads/"),
//   filename: (req, file, cb) => cb(null, Date.now() + path.extname(file.originalname))
// });

// const upload = multer({ storage });

// // POST: Upload project
// router.post("/", upload.single("image"), async (req, res) => {
//   try {
//     const { title, price, warranty, content } = req.body;

//     const newProject = new Project({
//       title,
//       price,
//       warranty,
//       content,
//       imageUrl: `/uploads/${req.file.filename}`,
//     });

//     await newProject.save();
//     res.json(newProject);
//   } catch (error) {
//     res.status(500).json({ message: error.message });
//   }
// });

// // GET: Fetch all projects
// router.get("/", async (req, res) => {
//   try {
//     const projects = await Project.find();
//     res.json(projects);
//   } catch (error) {
//     res.status(500).json({ message: error.message });
//   }
// });

// // DELETE: Delete project
// router.delete("/:id", async (req, res) => {
//   try {
//     await Project.findByIdAndDelete(req.params.id);
//     res.json({ message: "Project deleted" });
//   } catch (error) {
//     res.status(500).json({ message: error.message });
//   }
// });

// export default router;





// {
//   "name": "backend",
//   "version": "1.0.0",
//   "type": "module",
//   "main": "index.js",
//   "scripts": {
//     "test": "echo \"Error: no test specified\" && exit 1"
//   },
//   "keywords": [],
//   "author": "",
//   "license": "ISC",
//   "description": "",
//   "dependencies": {
//     "cors": "^2.8.5",
//     "dotenv": "^17.2.1",
//     "express": "^5.1.0",
//     "mongoose": "^8.18.0",
//     "multer": "^2.0.2",
//     "nodemon": "^3.1.10"
//   }
// }






// frontend src/Project.js




// import { color } from "framer-motion";
// import React, { useState, useEffect } from "react";

// function Projects() {
//   const [projects, setProjects] = useState([]);
//   const [file, setFile] = useState(null);
//   const [title, setTitle] = useState("");
//   const [price, setPrice] = useState("");
//   const [content, setContent] = useState("");
//   const [showPasswordModal, setShowPasswordModal] = useState(false);
//   const [password, setPassword] = useState("");
//   const [pendingAction, setPendingAction] = useState(null);
//   const [deleteId, setDeleteId] = useState(null);
//   const [lightbox, setLightbox] = useState({ open: false, imgUrl: "" });

//   const BACKEND_URL = "https://interior-backend-1.onrender.com";
//   const SECRET_PASSWORD = "admin123";

//   useEffect(() => {
//     fetch(`${BACKEND_URL}/api/projects`)
//       .then((res) => res.json())
//       .then((data) => setProjects(data))
//       .catch((err) => console.log(err));
//   }, []);

//   const handleUpload = (e) => {
//     e.preventDefault();
//     if (!file) return alert("Please select a file");
//     setPendingAction("upload");
//     setShowPasswordModal(true);
//   };

//   const confirmUpload = async () => {
//     const formData = new FormData();
//     formData.append("image", file);
//     formData.append("title", title);
//     formData.append("price", price);
//     formData.append("content", content);

//     try {
//       const res = await fetch(`${BACKEND_URL}/api/projects`, {
//         method: "POST",
//         body: formData,
//       });
//       const newProject = await res.json();
//       setProjects([...projects, newProject]);
//       setFile(null);
//       setTitle("");
//       setPrice("");
//       setContent("");
//     } catch (err) {
//       console.log(err);
//       alert("Upload failed");
//     }
//   };

//   const handleDelete = (id) => {
//     setPendingAction("delete");
//     setDeleteId(id);
//     setShowPasswordModal(true);
//   };

//   const confirmDelete = async () => {
//     try {
//       await fetch(`${BACKEND_URL}/api/projects/${deleteId}`, {
//         method: "DELETE",
//       });
//       setProjects(projects.filter((p) => p._id !== deleteId));
//     } catch (err) {
//       console.log(err);
//       alert("Delete failed");
//     }
//   };

//   const handlePasswordSubmit = () => {
//     if (password === SECRET_PASSWORD) {
//       if (pendingAction === "upload") confirmUpload();
//       if (pendingAction === "delete") confirmDelete();
//       setShowPasswordModal(false);
//       setPassword("");
//       setPendingAction(null);
//     } else {
//       alert("‚ùå Incorrect Password!");
//     }
//   };

//   const closeModal = () => {
//     setShowPasswordModal(false);
//     setPassword("");
//     setPendingAction(null);
//     setDeleteId(null);
//   };

//   const openLightbox = (imgUrl) => setLightbox({ open: true, imgUrl });
//   const closeLightbox = () => setLightbox({ open: false, imgUrl: "" });

//   return (
//     <div className="projects-container">
//       <h1 className="main-heading">‚ú® Our Projects ‚ú®</h1>

//       {/* Projects Grid */}
//       <div className="projects-grid">
//         {projects.map((p) => (
//           <div key={p._id} className="product-card">
//             <div
//               className="product-image"
//               onClick={() => openLightbox(`${BACKEND_URL}${p.imageUrl}`)}
//             >
//               <img src={`${BACKEND_URL}${p.imageUrl}`} alt={p.title} />
//             </div>
//             <div className="product-details">
//               <h3 className="product-title">{p.title}</h3>
//               <p className="product-desc">{p.content}  </p>
//               <div className="product-rating">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</div>
//               <div className="product-price">‚Çπ{p.price.toLocaleString()}</div>
//               <button
//                 className="luxe-btn"
//                 onClick={() => handleDelete(p._id)}
//               >
//                 Luxe Spaces
//               </button>
//             </div>
//           </div>
//         ))}
//       </div>

//       {/* Password Modal */}
//       {showPasswordModal && (
//         <div
//           className="modal-overlay show"
//           onClick={(e) =>
//             e.target === e.currentTarget && closeModal()
//           }
//         >
//           <div className="modal-content">
//             <h3>üîê Admin Access Required</h3>
//             <input
//               type="password"
//               placeholder="Enter admin password"
//               value={password}
//               onChange={(e) => setPassword(e.target.value)}
//             />
//             <div className="modal-buttons">
//               <button className="btn-confirm" onClick={handlePasswordSubmit}>
//                 Confirm
//               </button>
//               <button className="btn-cancel" onClick={closeModal}>
//                 Cancel
//               </button>
//             </div>
//           </div>
//         </div>
//       )}

//       {/* Lightbox */}
//       {lightbox.open && (
//         <div className="image-modal" onClick={closeLightbox}>
//           <img src={lightbox.imgUrl} alt="Project" />
//         </div>
//       )}

//       {/* Upload Form */}
//       <form className="upload-form" onSubmit={handleUpload}>
//         <h2 className="form-title">Add New Product</h2>
//         <div className="form-grid">
//           <div className="form-group">
//             <input
//               type="file"
//               onChange={(e) => setFile(e.target.files[0])}
//               required
//             />
//           </div>
//           {/* <div className="form-group">
//             <input
//               type="text"
//               placeholder="Title"
//               value={title}
//               onChange={(e) => setTitle(e.target.value)}
//               required
//             />
//           </div> */}
          
//           <div className="form-group">
//             <input
//               type="text"
//               placeholder="Title"
//               value={content}
//               onChange={(e) => setContent(e.target.value)}
//               required
//             />
//           </div>

//           <div className="form-group">
//             <input
//               type="number"
//               placeholder="Price (‚Çπ)"
//               value={price}
//               onChange={(e) => setPrice(e.target.value)}
//               required
//             />
//           </div>

//         </div>
//         <button type="submit" className="btn-upload">
//           Upload Product
//         </button>
//       </form>
//     </div>
//   );
// }

// export default Projects;



